@model DemoTest.Models.AuthorDetailsModel
@{
    ViewBag.Title = "CreateAuthor";
}

<h2>CreateAuthor</h2>
<link href="~/Content/datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<div class="container-fluid">
    <div class="row">
        <div class="col">
            <form>
                <div class="row">

                    <div class="form-group SearchMember/SearchMember col-md-3">
                        <label>First Name:<span style="color:red;">*</span> </label>
                        <input type="text" class="form-control" id="txtFirstName" />
                    </div>
                    <div class="form-group SearchMember/SearchMember col-md-3">
                        <label>Last Name: <span style="color:red;">*</span></label>
                        <input type="text" class="form-control" id="txtlastName" />
                    </div>
                    <div class="form-group SearchMember/SearchMember col-md-3">
                        <label>DOB: <span style="color:red;">*</span></label>
                        <input type="text" class="form-control datepicker" id="txtDOB" />
                    </div>

                </div>
                <div class="row">
                    <div class="row">
                        <div class="col-md-12 col-sm-12 col--lg-12">
                            <div class="table-responsive">
                                <table class="table table-bordered" id="tblAuthor">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th>SR</th>
                                            <th>First Name</th>
                                            <th>Last Name</th>
                                            <th>DOB</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>

                                </table>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="form-group SearchMember/SearchMember text-center">
                        <input type="button" class="btn btn-primary" id="btnSubmit" value="Submit" onclick="Add_Author();" />
                        <input type="button" class="btn btn-primary" id="btnCancelCityAdd" value="Clear" onclick="Clear();" />

                    </div>
                </div>

            </form>
        </div>

    </div>

</div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtDOB').datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>

}
<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        BindAuthorLis();
    });


</script>
<script>

    function BindAuthorLis() {
        debugger;
        $.ajax({
            type: "GET",
            url: "/BookDetails/BindAuthorList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (data) {

                $("#tblAuthor").find("tr:gt(0)").remove();
                var tblAuthor = $("#tblAuthor");
                if (data.length > 0) {

                    $("#tblAuthor").show();

                    PopulateTable(data, 1);
                    tableData = data.slice(0);
                }
                else {
                    $("#CommonMsg").modal('show');
                    $("#lblCommonMsg").html('No Data Found');
                    $("#lblCommonMsg").css('color', '#008000');
                    $("#tblAuthor").hide();
                }
            },
            error: {}
        });
    }


    function PopulateTable(arrData, pageNum) {

        var rowsPerPage = 10;
        var pages;
        var i;
        var pager = '';
        var startIndex;
        var endIndex;
        var row;

        $('#tblAuthor tr:gt(0)').remove();
        if (arrData != null) {
            // Populate table with data in the current page.
            startIndex = (pageNum - 1) * rowsPerPage;
            endIndex = pageNum * rowsPerPage > arrData.length ? arrData.length - 1 : pageNum * rowsPerPage - 1;
            row += "<tr>";
            row += "<th>SR</th>"
            row += "<th>First Name</th>"
            row += "<th>Last Name</th>"
            row += "<th>DOB</th>"
            row += "<th>Action</th>"
            row += "</tr>";
            for (i = startIndex; i <= endIndex; i++) {
                row = '<tr><td>' + arrData[i].AuthorID + '</td>'
                    + '<td>' + arrData[i].FirstName + '</td>'
                    + '<td>' + arrData[i].LastName + '</td>'
                    + '<td>' + arrData[i].DOB + '</td>'
                    + '<td>' + '<img src="/Images/edit.png" width="15px" id="btneditAuthor" data-toggle="tooltip" title="Edit" onclick="EditAuthorDetails(' + arrData[i].AuthorID + ');" AuthorID=' + arrData[i].AuthorID + '   /><img src="/Images/delete.png" width="15px" data-toggle="tooltip" title="Delete" id="btndeleteAuthor" onclick="DeleteAuthorDetails(' + arrData[i].AuthorID + ');" />' + '</td></tr>';
                $('#tblAuthor').append(row);
            }

            // Show pager row if there is more than one page
            pages = Math.floor(arrData.length / rowsPerPage);
            if (pages < arrData.length / rowsPerPage) {
                pages += 1;
            }
            if (pages > 1) {
                for (i = 0; i < pages; i++) {
                    if (i == pageNum - 1) {
                        pager += '<span>' + (i + 1) + '</span>';
                    }
                    else {
                        pager += '<span><a href="#" style="color:#ffffff;">' + (i + 1) + '</a></span>'
                    }
                }
                pager = '<tr><td colspan="125" class="pagerclass">' +
                    pager + '</td></tr>';
                $('#tblAuthor').append(pager);

                // Pager link event handler
                $('#tblAuthor tr td.pagerclass a').click(function (e) {
                    e.preventDefault();

                    var pNum = parseInt($(this).text());
                    PopulateTable(tableData, pNum);
                });
            }
        }
    }
    function EditAuthorDetails(ID) {

        debugger;


        $.ajax({
            url: "/BookDetails/EditAuthor",
            data: "{ID:" + ID + "}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            success: function (data) {
                debugger;
                $('#txtFirstName').val(data.FirstName);
                $('#txtlastName').val(data.LastName);
                $('#txtDOB').val(data.DOB);
            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });

    }
    function DeleteAuthorDetails(ID) {
        debugger;
        $.ajax({
            url: "/BookDetails/DeleteAuthor",
            data: "{ID:" + ID + "}",
            dataType: "json",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            async: false,
            success: function (data) {
                debugger;
                if (data = 200) {

                    alert('Record Deleted Successfully');
                    BindAuthorLis();
                    Clear();
                }
                else {
                    $("#CommonMsg").modal('show');
                    $("#lblCommonMsg").html(data.Data.ErrorMessage);
                    $("#lblCommonMsg").css('color', '#008000');
                    Clear();
                }


            },
            error: function (response) {
                alert(response.responseText);
            },
            failure: function (response) {
                alert(response.responseText);
            }
        });
    }
    function Clear() {
        $('#txtFirstName').val('');
        $('#txtlastName').val('');
        $('#txtDOB').val('');
    }
    function Add_Author() {
        debugger;
        var ObjAuthor = {};

        ObjAuthor.FirstName = $('#txtFirstName').val();

        ObjAuthor.LastName = $('#txtlastName').val();
        ObjAuthor.DOB = $('#txtDOB').val();
        if ($('#txtFirstName').val() != "" || $('#txtlastName').val() != "" || $('#txtDOB').val() != "") {
            $.ajax({
                url: "/BookDetails/AddAuthor",
                data: "{ObjAuthor:" + JSON.stringify(ObjAuthor) + "}",
                dataType: "json",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function (data) {
                    debugger;

                    if (data == 200) {

                        alert('Record Added Successfully');
                        BindAuthorLis();
                        Clear();
                    }
                    else if (data == 500) {
                        alert('Record Already Exist');
                        Clear();
                    }
                    else {
                        alert('Something went wrong');
                        Clear();
                    }


                },
                error: function (response) {
                    alert(response.responseText);
                },
                failure: function (response) {
                    alert(response.responseText);
                }
            });

        }
        else {
            alert('All Fields are mandatory..!');
        }

    }

</script>
